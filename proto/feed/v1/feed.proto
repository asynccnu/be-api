syntax = "proto3";

package feed.v1;
option go_package="proto/feed/v1;feedv1";

service FeedService {
  rpc GetFeedEvents (GetFeedEventsReq) returns (GetFeedEventsResp);//获取所有的消息,包括已读和未读两部分
  rpc ClearFeedEvent (ClearFeedEventReq) returns (ClearFeedEventResp);//清除当前的消息,如果包括已读和未读两部分
  rpc ChangeFeedAllowList (ChangeFeedAllowListReq)returns(ChangeFeedAllowListResp);//更改当前的推送的消息数量
  rpc ChangeElectricityStandard (ChangeElectricityStandardReq)returns(ChangeElectricityStandardResp);//修改当前的电力消息推送限额
  rpc SaveFeedToken (SaveFeedTokenReq)returns(SaveFeedTokenResp);//存储用户的token
  rpc PublicMuxiOfficialMSG(PublicMuxiOfficialMSGReq)returns(PublicMuxiOfficialMSGResp);//发布木犀官方消息
  rpc StopMuxiOfficialMSG(StopMuxiOfficialMSGReq)returns(StopMuxiOfficialMSGResp);//停止发布木犀官方消息
  rpc GetToBePublicOfficialMSG(GetToBePublicOfficialMSGReq)returns(GetToBePublicOfficialMSGResp);//获取当前还没发布的消息列表
  rpc GetFailMSG(GetFailMSGReq)returns(GetFailMSGResp);//用来获取当前用户发送失败的消息
}

message FeedEvent {
  int64 id = 1;
  string type = 2;
  string title = 3;
  string content = 4;
  map<string, string> ExtendFields=5;
  string create_at = 6;//创建时间
}

message GetFeedEventsReq {
  int64 userId = 1;
}

message GetFeedEventsResp {
  repeated FeedEvent read_events = 1;
  repeated FeedEvent unread_events = 2;
}

message ClearFeedEventReq {
  int64 userId = 1;
  int64 feedId = 2;//如果feedId设置为0表示删除所有的已读部分,如果设置为-1表示删除所有的消息,如果为指定的id号就只删除指定的id的消息
}

message ClearFeedEventResp {}

message ChangeFeedAllowListReq {
  int64 userId = 1;
  bool score = 2;
  bool muxi = 3;
  bool holiday = 4;
  bool air_conditioner=5;
  bool light=6;
}

message ChangeFeedAllowListResp {}

message ChangeElectricityStandardReq {
  int64 userId = 1;
  int64 energyStandard = 2;
}

message ChangeElectricityStandardResp {}

message SaveFeedTokenReq{
  int64 userId = 1;
  string token = 2;
}

message SaveFeedTokenResp{}

message PublicMuxiOfficialMSGReq{
  string title =1;
  string content=2;
  map<string, string> extendFields=3;//额外字段,如果需要附带的话
  int64 laterTime = 4;//设定为多少时间之后发送
}

message PublicMuxiOfficialMSGResp{
  string title =1;
  string content=2;
  map<string, string> extendFields=3;
  string publicTime =4;
  string stopId=5;
}

message MuxiOfficialMSG{
  string title =1;
  string content=2;
  map<string, string> extendFields=3;
  string publicTime =4;
  string stopId=5;
}

message StopMuxiOfficialMSGReq{
  string stopId=1;
}

message StopMuxiOfficialMSGResp{}
message GetToBePublicOfficialMSGReq{}
message GetToBePublicOfficialMSGResp{
  repeated MuxiOfficialMSG msgList=1;
}
message GetFailMSGReq{
  int64 userId = 1;
}
message GetFailMSGResp{}